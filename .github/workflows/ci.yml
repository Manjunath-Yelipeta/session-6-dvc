name: CI
on:
  push:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        env:
          UV_EXTRA_INDEX_URL: https://download.pytorch.org/whl/cpu
        run: |
          uv sync

      - name: Run coverage with pytest
        run: |
          uv run coverage run -m pytest
          uv run coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true
          verbose: true

  build-and-push-image:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  train-and-test:
    name: Train and Test Model
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository name
        run: echo "REPO_LOWERCASE=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Train and test model
        run: |
          docker run --rm --shm-size=2g -v ${{ github.workspace }}:/workspace ghcr.io/${{ env.REPO_LOWERCASE }}:main \
          python /workspace/src/train.py \
          data=dog \
          model=timm_classify \
          model.model_name=vit_base_patch16_224 \
          model.num_classes=10 \
          trainer.max_epochs=5 \
          trainer.accelerator=cpu \
          trainer.devices=1 \
          data.batch_size=8 \
          test=True \
          > training_output.txt

      - name: Upload Model Checkpoint
        uses: actions/upload-artifact@v4
        with:
          name: model-checkpoint
          path: checkpoint/model_hy.ckpt
          retention-days: 90

      - name: Upload Model Logs
        uses: actions/upload-artifact@v4
        with:
          name: model-logs
          path: logs/
          retention-days: 90

      - name: Upload Config
        uses: actions/upload-artifact@v4
        with:
          name: config
          path: config/
          retention-days: 90

      - name: Check Test Accuracy
        run: |
          accuracy=$(grep "Test accuracy:" training_output.txt | awk '{print $NF}')
          echo "Test accuracy: $accuracy"
          if (( $(echo "$accuracy < 0.95" | bc -l) )); then
            echo "Accuracy is below 95%. Failing the workflow."
            exit 1
          fi

      - name: Upload Training Output
        uses: actions/upload-artifact@v4
        with:
          name: training-output
          path: training_output.txt
          retention-days: 90
